

api-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
    name: synergychat-api-configmap
data:
    API_PORT: "8080"    
    API_DB_FILEPATH: /persist/db.json
    CRAWLER_BASE_URL: http://crawler-service.crawler.svc.clster.local:8080


api-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: synergychat-api
  labels:
    app: synergychat-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: synergychat-api
  template:
    metadata:
      labels:
        app: synergychat-api
    spec:
      volumes:
        - name: synergychat-api-volume
          persistentVolumeClaim:
            claimName: synergychat-api-pvc
      containers:
      - name: synergychat-api
        image: bootdotdev/synergychat-api:latest
        volumeMounts:
          - name: synergychat-api-volume
            mountPath: /persist 
        envFrom:
          - configMapRef:
              name: synergychat-api-configmap


api-pvc.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: synergychat-api-pvc
#  namespace: crawler
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


api-service.yaml

apiVersion: v1
kind: Service
metadata:
    name: api-service
spec:
    selector:
        app: synergychat-api
    ports:
      - port: 80
        targetPort: 8080
        protocol: TCP


app-ingress.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /

spec:
  rules:
    - host: synchat.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
    - host: synchatapi.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 80


web-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
    name: synergychat-web-configmap
data:
    WEB_PORT: "8080"
    API_URL: http://synchatapi.internal


web-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"3"},"creationTimestamp":"2025-01-07T01:33:05Z","generation":5,"labels":{"app":"synergychat-web"},"name":"synergychat-web","namespace":"default","resourceVersion":"164645","uid":"4db9746e-8f1e-438e-a5ee-049f6145fc60"},"spec":{"progressDeadlineSeconds":600,"replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"synergychat-web"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2025-01-11T11:01:59-06:00"},"creationTimestamp":null,"labels":{"app":"synergychat-web"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"synergychat-web-configmap"}}],"image":"docker.io/bootdotdev/synergychat-web:latest","imagePullPolicy":"Always","name":"synergychat-web","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":3,"conditions":[{"lastTransitionTime":"2025-01-07T01:33:05Z","lastUpdateTime":"2025-01-11T17:51:42Z","message":"ReplicaSet \"synergychat-web-d58b8bc8f\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2025-01-12T17:31:11Z","lastUpdateTime":"2025-01-12T17:31:11Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"}],"observedGeneration":5,"readyReplicas":3,"replicas":3,"updatedReplicas":3}}
  generation: 6
  labels:
    app: synergychat-web
  name: synergychat-web
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: synergychat-web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-01-11T11:01:59-06:00"
      creationTimestamp: null
      labels:
        app: synergychat-web
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: synergychat-web-configmap
        image: docker.io/bootdotdev/synergychat-web:latest
        imagePullPolicy: Always
        name: synergychat-web
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2025-01-07T01:33:05Z"
    lastUpdateTime: "2025-01-11T17:51:42Z"
    message: ReplicaSet "synergychat-web-d58b8bc8f" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-01-12T19:35:08Z"
    lastUpdateTime: "2025-01-12T19:35:08Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 6
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3


web-service.yaml

apiVersion: v1
kind: Service
metadata:
    name: web-service
spec:
    selector:
        app: synergychat-web
    ports:
      - port: 80
        targetPort: 8080
        protocol: TCP
